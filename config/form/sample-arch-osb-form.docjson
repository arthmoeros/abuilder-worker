{
    /* 
        A forms array, each one represent a possible input for a single blueprint and task,
        it is suggested that one group of forms = 1 blueprint.
    */
    "$forms": [ 
        {
            /*
                A display name and description for the Form
            */
            "$formName": "Sample Form 1",
            "$formDescription": "This sample form generates a JDeveloper Project for a OSB proxy service, using the data provided by the user and the configured templates",

            /*
                The main input object, the contents of this element must be used as a reference
                for an artifact generation request
            */
            "$requestSchema": {
                /* ***** Static Data Section ***** */
                /* Self reference to this processor file */
                "$configuration" : "sample-arch-osb-form",
                /* Identifier for the linked blueprint for artifact generation */
                "$blueprint" : "sample-arch-osb-gen",
                /* Underlying task in the blueprint, it is suggested that 1 input(form) = 1 task */
                "$task": "generate-sample-arch-osb",

                /* ***** Variable Data Section ***** */
                /*
                    Schema definition, the elements can be nested at whatever level necessary,
                    the last child elements must have a type and miscellaneous definition,
                    except when it is an array, which must have an item definition
                */
                "generalInfo": {
                    "additionalFolders": {
                        "@type": "boolean",
                        "@defaultValue": true,
                        "@required": true
                    },
                    "bizDomain": {
                        "@type": "string",
                        "@defaultValue": "General",
                        "@required": true
                    },
                    "bizEntity": {
                        "@type": "string",
                        "@required": true
                    },
                    "serviceId": {
                        "@type": "number",
                        "@required": true
                    }
                },
                "specificInfo": {
                    "serviceName": {
                        "@type": "string",
                        "@required": true
                    },
                    "serviceVersion": {
                        "@type": "string",
                        "@required": true
                    },
                    "serviceType": {
                        "@type": "choice",
                        "@required": false,
                        "@options": [
                            "ABC",
                            "XYZ"
                        ]
                    }
                },
                "schemaInfo": {
                    "schemas": {
                        "@type": "array",
                        "@required": false,
                        "@item": {
                            "schemaName": {
                                "@type": "string",
                                "@required": true
                            }
                        }
                    }
                }
            },
            /*
                Additional metadata for the input definition, inputDisplayData defines
                how can the data required be labeled and further supported, this information
                is essential for a better understanding of the data required by the form
            */
            "$inputDisplayData": {
                "generalInfo": {
                    "label": "General Information"
                },
                "generalInfo.additionalFolders": {
                    "label": "Additional Folders",
                    "helptext": "Indicates whether or not to generate additional empty folders"
                },
                "generalInfo.bizDomain": {
                    "label": "Business Domain",
                    "helptext": "Service's business domain, default is \"General\""
                },
                "generalInfo.bizEntity": {
                    "label": "Business Entity",
                    "helptext": "Business Entity which the service makes use of",
                    "placeholder": "Put a Biz here"
                },
                "generalInfo.serviceId": {
                    "label": "Service ID",
                    "helptext": "Identification number for the service"
                },
                "specificInfo": {
                    "label": "Specific Information"
                },
                "specificInfo.serviceName": {
                    "label": "Service Name",
                    "helptext": "Service descriptive name, should indicate a verbal operation (IE: GetCustomerInfo)"
                },
                "specificInfo.serviceVersion": {
                    "label": "Service Version",
                    "helptext": "Version number for the service, should follow the pattern: V[Major].[Minor] (IE: V1.0)"
                },
                "specificInfo.serviceType": {
                    "label": "Service Type",
                    "helptext": "Indicates Service Type"
                },
                "schemasInfo": {
                    "label": "Provide information about support schemas to include"
                },
                "schemasInfo.schemas": {
                    "label": "Schemas List"
                },
                "schemasInfo.schemas.schemaName": {
                    "label": "Schema Name",
                    "helptext": "The support schema name"
                }
            },
            /*
                Declared post processors for some values, these are run before any template
                processing, just after recieving the request.

                For now, QSDT only supports these postProcessors:

                string.allLowerCase
                string.allUpperCase
                string.startWithUpperCase
                string.startWithLowerCase
                string.blanksToCamelCase
            */
            "$declaredPostProcessors": {
                "generalInfo.bizEntity": [
                    "string.allLowerCase",
                    "string.blanksToCamelCase",
                    "string.startWithUpperCase"
                ],
                "generalInfo.specificInfo.serviceName": [
                    "string.allLowerCase",
                    "string.blanksToCamelCase",
                    "string.startWithUpperCase"
                ],
                "generalInfo.specificInfo.serviceVersion": [
                    "string.allLowerCase"
                ]
            }
        }
    ]
}