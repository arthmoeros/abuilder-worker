#iteration(actionId=generateOsb11gGUID)
<?xml version="1.0" encoding="UTF-8"?>
<xml-fragment xmlns:ser="http://www.bea.com/wli/sb/services" xmlns:tran="http://www.bea.com/wli/sb/transports" xmlns:env="http://www.bea.com/wli/config/env" xmlns:http="http://www.bea.com/wli/sb/transports/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:con="http://www.bea.com/wli/sb/pipeline/config" xmlns:con1="http://www.bea.com/wli/sb/stages/logging/config" xmlns:con2="http://www.bea.com/wli/sb/stages/config" xmlns:con3="http://www.bea.com/wli/sb/stages/transform/config" xmlns:con4="http://www.bea.com/wli/sb/stages/routing/config">
  <ser:coreEntry isProxy="true" isEnabled="true">
    <ser:binding type="SOAP" isSoap12="false" xsi:type="con:SoapBindingType" xmlns:con="http://www.bea.com/wli/sb/services/bindings/config">
      <con:wsdl ref="&{(auc)negocio}_&{(auc)localizacion}_&{(auc)backend}_&{objetoDeDatos}&{*(prefix['_'])interfazPackage}_&{operacionComando}_&{(urd)versionServicio}_IMPL/Resources/WSDL/&{(auc)capa}_&{(auc)negocio}_&{(auc)localizacion}_&{(auc)backend}_&{objetoDeDatos}&{*(prefix['_'])interfazPackage}_&{operacionComando}_IMPL"/>
      <con:port>
        <con:name>&{backend}&{objetoDeDatos}&{interfazPackage}&{operacionComando}PortIMPL</con:name>
        <con:namespace>http://mdwcorp.falabella.com/&{(auc)negocio}/&{(auc)localizacion}/&{(auc)capa}/wsdl/&{(auc)backend}/&{objetoDeDatos}&{*(prefix['/'])interfazPackage}/&{operacionComando}/IMPL/&{versionWSDL}</con:namespace>
      </con:port>
      <con:selector type="SOAP body"/>
      <con:WSI-compliant>false</con:WSI-compliant>
    </ser:binding>
    <ser:monitoring isEnabled="false">
      <ser:aggregationInterval>10</ser:aggregationInterval>
      <ser:pipelineMonitoringLevel>Pipeline</ser:pipelineMonitoringLevel>
    </ser:monitoring>
    <ser:reporting>true</ser:reporting>
    <ser:logging isEnabled="true">
      <ser:logLevel>debug</ser:logLevel>
    </ser:logging>
    <ser:sla-alerting isEnabled="true">
      <ser:alertLevel>normal</ser:alertLevel>
    </ser:sla-alerting>
    <ser:pipeline-alerting isEnabled="true">
      <ser:alertLevel>normal</ser:alertLevel>
    </ser:pipeline-alerting>
    <ser:ws-policy>
      <ser:binding-mode>wsdl-policy-attachments</ser:binding-mode>
    </ser:ws-policy>
  </ser:coreEntry>
  <ser:endpointConfig>
    <tran:provider-id>local</tran:provider-id>
    <tran:inbound>true</tran:inbound>
    <tran:inbound-properties/>
    <tran:all-headers>true</tran:all-headers>
  </ser:endpointConfig>
  <ser:router errorHandler="_onErrorHandler-&{#actionId}">
    <con:pipeline type="request" name="proxyImplementacion_request">
      <con:stage name="LEER_DESCRIPCION_TO-DO">
        <con:comment>1. Crear y configurar XQuery faltantes (Ver errores)
2. Configurar Proxy a utilizar en routing mas abajo (Ver error)
3. Configurar Validacion de Response de Routing (Ver error)
4. Borrar este Stage</con:comment>
        <con:context/>
      </con:stage>
      <con:stage name="validateRequestImpl">
        <con:context>
          <con2:varNsDecl namespace="http://mdwcorp.falabella.com/common/schema/clientservice" prefix="cli"/>
          <con2:varNsDecl namespace="http://mdwcorp.falabella.com/&{(auc)negocio}/&{(auc)localizacion}/&{(auc)capa}/schema/&{(auc)backend}/&{objetoDeDatos}&{*(prefix['/'])interfazPackage}/&{operacionComando}/Req/IMPL/&{versionXSDReq}" prefix="req"/>
        </con:context>
        <con:actions>
          <con3:validate>
            <con2:id>_ActionId-&{#actionId}</con2:id>
            <con3:schema ref="UT_EsquemasComunes_V.2.0/Specifications/XSD/Common/MdwCorp_Common_clientService"/>
            <con3:schemaElement xmlns:cli="http://mdwcorp.falabella.com/common/schema/clientservice">cli:ClientService</con3:schemaElement>
            <con3:varName>header</con3:varName>
            <con3:location>
              <con2:xpathText>./cli:ClientService</con2:xpathText>
            </con3:location>
          </con3:validate>
          <con3:validate>
            <con2:id>_ActionId-&{#actionId}</con2:id>
            <con3:schema ref="&{(auc)negocio}_&{(auc)localizacion}_&{(auc)backend}_&{objetoDeDatos}&{*(prefix['_'])interfazPackage}_&{operacionComando}_&{(urd)versionServicio}_IMPL/Resources/Schemas/&{(auc)capa}_&{(auc)negocio}_&{(auc)localizacion}_&{(auc)backend}_&{objetoDeDatos}&{*(prefix['_'])interfazPackage}_&{operacionComando}_IMPL_Req"/>
            <con3:schemaElement xmlns:req="http://mdwcorp.falabella.com/&{(auc)negocio}/&{(auc)localizacion}/&{(auc)capa}/schema/&{(auc)backend}/&{objetoDeDatos}&{*(prefix['/'])interfazPackage}/&{operacionComando}/Req/IMPL/&{versionXSDReq}">req:&{backend}&{objetoDeDatos}&{interfazPackage}&{operacionComando}Req</con3:schemaElement>
            <con3:varName>body</con3:varName>
            <con3:location>
              <con2:xpathText>./req:&{backend}&{objetoDeDatos}&{interfazPackage}&{operacionComando}Req</con2:xpathText>
            </con3:location>
          </con3:validate>
        </con:actions>
      </con:stage>
      <con:stage name="setRequestBusiness">
        <con:context>
          <con2:varNsDecl namespace="http://mdwcorp.falabella.com/&{(auc)negocio}/&{(auc)localizacion}/&{(auc)capa}/schema/&{(auc)backend}/&{objetoDeDatos}&{*(prefix['/'])interfazPackage}/&{operacionComando}/Req/IMPL/&{versionXSDReq}" prefix="req"/>
        </con:context>
        <con:actions>
          <con3:assign varName="requestBusiness">
            <con2:id>_ActionId-&{#actionId}</con2:id>
            <con3:expr>
              <con2:xqueryTransform>
                <con2:resource ref="CONFIGURAR/XQUERY_ENTRADA"/>
                <con2:param name="&{backend}&{objetoDeDatos}&{interfazPackage}&{operacionComando}Req">
                  <con2:path>$body/req:&{backend}&{objetoDeDatos}&{interfazPackage}&{operacionComando}Req</con2:path>
                </con2:param>
              </con2:xqueryTransform>
            </con3:expr>
          </con3:assign>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="response" name="proxyImplementacion_response">
      <con:stage name="setResponse">
        <con:context>
          <con2:varNsDecl namespace="http://mdwcorp.falabella.com/&{(auc)negocio}/&{(auc)localizacion}/&{(auc)capa}/schema/&{(auc)backend}/&{objetoDeDatos}&{*(prefix['/'])interfazPackage}/&{operacionComando}/Req/IMPL/&{versionXSDReq}" prefix="req"/>
          <con2:varNsDecl namespace="http://mdwcorp.falabella.com/&{(auc)negocio}/&{(auc)localizacion}/&{(auc)capa}/schema/&{(auc)backend}/&{objetoDeDatos}&{*(prefix['/'])interfazPackage}/&{operacionComando}/Resp/IMPL/&{versionXSDResp}" prefix="resp"/>
        </con:context>
        <con:actions>
          <con3:assign varName="responseImplementacion">
            <con2:id>_ActionId-&{#actionId}</con2:id>
            <con3:expr>
              <con2:xqueryTransform>
                <con2:resource ref="CONFIGURAR/XQUERY_SALIDA"/>
                <con2:param name="PARAM_RESPONSE_BIZ">
                  <con2:path>$responseBusiness</con2:path>
                </con2:param>
              </con2:xqueryTransform>
            </con3:expr>
          </con3:assign>
          <con3:assign varName="body">
            <con2:id>_ActionId-&{#actionId}</con2:id>
            <con3:expr>
              <con2:xqueryText>element soap-env:Body{
	$responseImplementacion
}</con2:xqueryText>
            </con3:expr>
          </con3:assign>
        </con:actions>
      </con:stage>
      <con:stage name="cleanImplementacion">
        <con:context/>
        <con:actions>
          <con3:delete varName="requestBusiness">
            <con2:id>_ActionId-&{#actionId}</con2:id>
          </con3:delete>
          <con3:delete varName="responseBusiness">
            <con2:id>_ActionId-&{#actionId}</con2:id>
          </con3:delete>
          <con3:delete varName="responseImplementacion">
            <con2:id>_ActionId-&{#actionId}</con2:id>
          </con3:delete>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="error" name="_onErrorHandler-&{#actionId}">
      <con:stage name="logErrorTecnicoImpl">
        <con:context/>
        <con:actions>
          <con1:log>
            <con2:id>_ActionId-&{#actionId}</con2:id>
            <con1:logLevel>debug</con1:logLevel>
            <con1:expr>
              <con2:xqueryText>$fault</con2:xqueryText>
            </con1:expr>
            <con1:message>Error en [PX_&{(auc)localizacion}_&{objetoDeDatos}&{*(prefix['_'])interfazPackage}_&{operacionComando}Impl] --></con1:message>
          </con1:log>
        </con:actions>
      </con:stage>
      <con:stage name="cleanImplementacion">
        <con:context/>
        <con:actions>
          <con3:delete varName="requestBusiness">
            <con2:id>_ActionId-&{#actionId}</con2:id>
          </con3:delete>
          <con3:delete varName="responseBusiness">
            <con2:id>_ActionId-&{#actionId}</con2:id>
          </con3:delete>
          <con3:delete varName="responseImplementacion">
            <con2:id>_ActionId-&{#actionId}</con2:id>
          </con3:delete>
          <con3:delete varName="header">
            <con2:id>_ActionId-&{#actionId}</con2:id>
          </con3:delete>
        </con:actions>
      </con:stage>
      <con:stage name="setResponseSoapFault">
        <con:context/>
        <con:actions>
          <con3:ifThenElse>
            <con2:id>_ActionId-&{#actionId}</con2:id>
            <con3:case>
              <con3:condition>
                <con2:xqueryText>fn:exists($body/soap-env:Fault)</con2:xqueryText>
              </con3:condition>
              <con3:actions/>
            </con3:case>
            <con3:default>
              <con1:assign varName="body" xmlns:con3="http://www.bea.com/wli/sb/stages/logging/config" xmlns:con1="http://www.bea.com/wli/sb/stages/transform/config">
                <con2:id>_ActionId-&{#actionId}</con2:id>
                <con1:expr>
                  <con2:xqueryText><![CDATA[<soapenv:Fault xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
   <faultcode>{data("Server")}</faultcode>
   <faultstring>{data($fault/reason)}</faultstring>
   <faultactor>&{(auc)backend}</faultactor>
   <detail>{$fault}</detail>
</soapenv:Fault>]]></con2:xqueryText>
                </con1:expr>
              </con1:assign>
            </con3:default>
          </con3:ifThenElse>
          <con2:reply isError="true">
            <con2:id>_ActionId-&{#actionId}</con2:id>
          </con2:reply>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:flow>
      <con:pipeline-node name="proxyImplementacion">
        <con:request>proxyImplementacion_request</con:request>
        <con:response>proxyImplementacion_response</con:response>
      </con:pipeline-node>
      <con:route-node name="routeBusiness">
        <con:context/>
        <con:actions>
          <con4:route>
            <con2:id>_ActionId-&{#actionId}</con2:id>
            <con4:service ref="CONFIGURAR_BUSINESS/BIZ" xsi:type="ref:ProxyRef" xmlns:ref="http://www.bea.com/wli/sb/reference"/>
            <con4:operation>CONFIGURAR_OP_BIZ</con4:operation>
            <con4:outboundTransform>
              <con3:assign varName="body">
                <con2:id>_ActionId-&{#actionId}</con2:id>
                <con3:expr>
                  <con2:xqueryText>element soap-env:Body{
	$requestBusiness
}</con2:xqueryText>
                </con3:expr>
              </con3:assign>
            </con4:outboundTransform>
            <con4:responseTransform>
              <con3:assign varName="responseBusiness">
                <con2:id>_ActionId-&{#actionId}</con2:id>
                <con3:expr>
                  <con2:xqueryText>$body/*[1]</con2:xqueryText>
                </con3:expr>
              </con3:assign>
              <con3:validate>
                <con2:id>_ActionId-&{#actionId}</con2:id>
                <con3:varName>responseBusiness</con3:varName>
                <con3:location>
                  <con2:xpathText>.</con2:xpathText>
                </con3:location>
              </con3:validate>
            </con4:responseTransform>
          </con4:route>
        </con:actions>
      </con:route-node>
    </con:flow>
  </ser:router>
</xml-fragment>